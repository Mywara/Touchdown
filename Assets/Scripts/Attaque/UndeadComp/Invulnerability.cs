using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Invulnerability : Photon.PUNBehaviour {

    public float invunerabilityDuration = 5F;
    PUNTutorial.HealthScript healthScript;
    PUNTutorial.HealthScript2 healthScript2;
    public GameObject InvulnerableEffect = null;

    // Use this for initialization
    void Start () {
        //on get les scripts de vie
        healthScript = GetComponent<PUNTutorial.HealthScript>();
        healthScript2 = GetComponent<PUNTutorial.HealthScript2>();
        if (healthScript == null || healthScript2 == null)
        {
            Debug.Log("Error, no healthScript or healthScript2");
        }
    }

    //lance le sort d'invulnerabilité
    [PunRPC]
    public IEnumerator BecameInvulnerable()
    {
        GameObject effect = null;
        //on modifie legèrement l'endroit de spawn de l'effet d'invulnerabilité pour des raisons esthétiques
        Vector3 spawnPos = this.transform.position;
        spawnPos.y += 0.4F;
        //on instancie l'effet visuel d'invulnérabilité
        effect = Instantiate(InvulnerableEffect, spawnPos, this.transform.rotation).gameObject as GameObject;
        if (effect != null)
        {
            //On met en enfant du joueur l'effet, donc si le joueur bouge, l'effet le suit
            effect.transform.SetParent(this.transform);
            //photonView.RPC("SetEffectAsParent", PhotonTargets.All, effect.GetPhotonView().viewID);
        }
        //on rend le joueur invulnérable
        healthScript.Invulnerable = true;
        healthScript2.Invulnerable = true;
        //On attend invunerabilityDuration seconde
        yield return new WaitForSeconds(invunerabilityDuration);
        //on rend le joueur vulnérable de nouveaux
        healthScript.Invulnerable = false;
        healthScript2.Invulnerable = false;
        //n detruit l'effet
        Destroy(effect);
    }
}
